select *
from ProjectPortfolio..SalesData;

-- checking for duplicates
with cte as (select *, ROW_NUMBER() over(partition by [order id], 
                            [order date], [purchase address], 
                            month, city,
                            hour order by product) as [row num]
from ProjectPortfolio..SalesData)
select *
from cte
where [row num] >1

--Formatted the order date column to date
select [Order Date]
from ProjectPortfolio..SalesData;

alter table projectportfolio..salesdata
alter column [order date] date

-- Splitting the Purchase Address to separate columns(address and country zipcode)
select [purchase address], PARSENAME(replace([purchase address], ',','.'),1)
from ProjectPortfolio..SalesData

select [purchase address], PARSENAME(replace([purchase address], ',','.'),3)
from ProjectPortfolio..SalesData

-- creating columns for the extracted address data
alter table projectportfolio..salesdata
add Purchase_Address nvarchar(255)
alter table projectportfolio..salesdata
add zip_code nvarchar(255)

update ProjectPortfolio..SalesData
set Purchase_Address = PARSENAME(replace([purchase address], ',','.'),3)

update ProjectPortfolio..SalesData
set zip_code = PARSENAME(replace([purchase address], ',','.'),1)

select [quantity ordered]*[price each] totalsales
from ProjectPortfolio..SalesData

alter table projectportfolio..salesdata
add adjustedsales float



update ProjectPortfolio..SalesData
set adjustedsales = [quantity ordered]*[price each]

--Removing unused column(Sales)
alter table projectportfolio..salesdata
drop column sales

-- Total sales across all products
select sum(adjustedsales) as totalsales
from ProjectPortfolio..SalesData
--order by 2 desc

--Breakdown of Total revenue generated by each product
select product,sum(adjustedsales) as Total_by_products
from ProjectPortfolio..SalesData
group by Product
order by 2 desc

-- Total orders
select count([Order ID]) as Count_orders
from ProjectPortfolio..SalesData
--order by 2 desc

--Cities with most orders
select city, count([order id]) total_order_city
from ProjectPortfolio..SalesData
group by city
order by 2 desc

--Total order count by product and city
select city, product, count([order id]) total_order_product_city
from ProjectPortfolio..SalesData
group by city, Product
order by 3 desc

--sorting products by revenue
select product, sum(adjustedsales) as product_most_revenue
from ProjectPortfolio..SalesData
group by Product
order by 2 desc

--sorting products by count
select product, count(adjustedsales) as count_sales_by_product
from ProjectPortfolio..SalesData
group by Product
order by 2 desc

--date with most revenue
select [Order Date], sum(adjustedsales) as date_most_revenue
from ProjectPortfolio..SalesData
group by [Order Date]
order by 2 desc

--first order date
select min([Order Date]) first_order_date,[Order ID], product
from ProjectPortfolio..SalesData
group by Product, [Order ID]

--iphone_sold_count
select count(product) as iphone_sold_count
from ProjectPortfolio..SalesData
where product = 'iphone'
--group by Product, [Order ID]

select Month, sum(adjustedsales) as TotalMonthRevenue
from ProjectPortfolio..SalesData
group by Month
order by 2 desc










select *, sum(adjustedsales) over(partition by product order by [order id]) as rollingtotal
from ProjectPortfolio..SalesData

with cte as (select *, sum(adjustedsales) over(partition by product order by [order id]) as rollingtotal
from ProjectPortfolio..SalesData)
select product,avg(rollingtotal)
from cte
group by product

